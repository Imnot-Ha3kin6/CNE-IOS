name: Build iOS App
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      run: |
        # Ensure Xcode is properly set up
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        
    - name: Remove Haxe Setup
      run: echo "Skipping Haxe setup - building iOS app without Haxe compilation"
        
    - name: Find Xcode Project
      run: |
        xcodeproj_path=$(find . -name "*.xcodeproj" -type d | head -1)
        
        if [ -z "$xcodeproj_path" ]; then
          echo "ERROR: No .xcodeproj folder found!"
          ls -la
          exit 1
        fi
        
        echo "Found Xcode project: $xcodeproj_path"
        echo "XCODEPROJ_PATH=$xcodeproj_path" >> $GITHUB_ENV
        
    - name: List Project Info
      run: |
        echo "Project information:"
        xcodebuild -project "$XCODEPROJ_PATH" -list
        
    - name: Build iOS App (Skip Haxe)
      timeout-minutes: 30
      run: |
        project_name=$(basename "$XCODEPROJ_PATH" .xcodeproj)
        echo "Building project: $project_name"
        
        # List all available targets and schemes
        echo "Available targets and schemes:"
        xcodebuild -project "$XCODEPROJ_PATH" -list
        
        # First, try to build just the CodenameEngine target without archiving
        echo "Building CodenameEngine target..."
        xcodebuild build \
          -project "$XCODEPROJ_PATH" \
          -target "CodenameEngine" \
          -configuration Release \
          -destination "generic/platform=iOS" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM="" \
          ARCHS="arm64" \
          VALID_ARCHS="arm64" \
          -allowProvisioningUpdates
        
        # Find the built app
        built_app=$(find . -name "CodenameEngine.app" -o -name "*.app" | head -1)
        
        if [ -n "$built_app" ]; then
          echo "Found built app: $built_app"
          
          # Create archive structure manually
          mkdir -p build/archives/CodenameEngine.xcarchive/Products/Applications
          cp -r "$built_app" build/archives/CodenameEngine.xcarchive/Products/Applications/
          
          # Create minimal Info.plist for archive
          cat > build/archives/CodenameEngine.xcarchive/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>ArchiveVersion</key>
            <integer>2</integer>
            <key>CreationDate</key>
            <date>$(date -u +%Y-%m-%dT%H:%M:%SZ)</date>
            <key>Name</key>
            <string>CodenameEngine</string>
            <key>SchemeName</key>
            <string>CodenameEngine</string>
        </dict>
        </plist>
        EOF
          
          echo "ARCHIVE_PATH=build/archives/CodenameEngine.xcarchive" >> $GITHUB_ENV
          echo "Archive created successfully"
        else
          echo "No built app found. Looking for build products..."
          find . -name "*.app" -o -name "build" -type d
          exit 1
        fi
        
    - name: Create IPA
      run: |
        mkdir -p build/export
        
        app_path=$(find "$ARCHIVE_PATH" -name "*.app" | head -1)
        
        if [ -z "$app_path" ]; then
          echo "No .app found in archive"
          find "$ARCHIVE_PATH" -type f
          exit 1
        fi
        
        echo "Found app: $app_path"
        
        mkdir -p build/export/Payload
        cp -r "$app_path" build/export/Payload/
        
        cd build/export
        zip -r CodenameEngine-unsigned.ipa Payload/
        cd ../..
        
        echo "IPA created successfully"
        ls -la build/export/
        
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-unsigned-ipa
        path: build/export/*.ipa
        if-no-files-found: error