name: Build iOS App
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Command Line Tools
      run: |
        # Install Xcode command line tools if not present
        xcode-select --install || true
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        
        # Install make and other build essentials
        brew install make
        
    - name: Setup Haxe (if needed)
      run: |
        # Install Haxe if your project requires it
        if [ -f "project.xml" ] || [ -f "Project.xml" ]; then
          brew install haxe
          
          # Create haxelib directory in user space instead of system directory
          mkdir -p ~/haxelib
          haxelib setup ~/haxelib
          
          # Add any specific haxelib dependencies your project needs
          # haxelib install lime
          # haxelib install openfl
          
          # Set up Haxe environment variables
          echo "HAXE_STD_PATH=/opt/homebrew/lib/haxe/std" >> $GITHUB_ENV
          echo "HAXELIB_PATH=~/haxelib" >> $GITHUB_ENV
        fi
        
    - name: Find Xcode Project
      run: |
        xcodeproj_path=$(find . -name "*.xcodeproj" -type d | head -1)
        
        if [ -z "$xcodeproj_path" ]; then
          echo "ERROR: No .xcodeproj folder found!"
          ls -la
          exit 1
        fi
        
        echo "Found Xcode project: $xcodeproj_path"
        echo "XCODEPROJ_PATH=$xcodeproj_path" >> $GITHUB_ENV
        
    - name: List Project Info
      run: |
        echo "Project information:"
        xcodebuild -project "$XCODEPROJ_PATH" -list
        
    - name: Build with Haxe Support
      timeout-minutes: 45
      run: |
        project_name=$(basename "$XCODEPROJ_PATH" .xcodeproj)
        echo "Building target: $project_name"
        
        mkdir -p build/archives
        archive_path="build/archives/${project_name}.xcarchive"
        
        # Set up environment for make and Haxe
        export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"
        export HAXE_STD_PATH="/opt/homebrew/lib/haxe/std"
        export HAXELIB_PATH="$HOME/haxelib"
        
        # Debug environment
        echo "PATH: $PATH"
        echo "HAXE_STD_PATH: $HAXE_STD_PATH"
        echo "HAXELIB_PATH: $HAXELIB_PATH"
        which make || echo "make not found"
        which haxe || echo "haxe not found"
        
        # Build with proper environment
        xcodebuild archive \
          -project "$XCODEPROJ_PATH" \
          -scheme "$project_name" \
          -configuration Release \
          -destination "generic/platform=iOS" \
          -archivePath "$archive_path" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM="" \
          -allowProvisioningUpdates \
          OTHER_CFLAGS="-DRELEASE" \
          GCC_PREPROCESSOR_DEFINITIONS="RELEASE=1"
        
        echo "ARCHIVE_PATH=$archive_path" >> $GITHUB_ENV
        
        if [ -d "$archive_path" ]; then
          echo "Archive created successfully"
          find "$archive_path" -name "*.app"
        else
          echo "Archive creation failed"
          exit 1
        fi
        
    - name: Create IPA
      run: |
        mkdir -p build/export
        
        app_path=$(find "$ARCHIVE_PATH" -name "*.app" | head -1)
        
        if [ -z "$app_path" ]; then
          echo "No .app found in archive"
          find "$ARCHIVE_PATH" -type f
          exit 1
        fi
        
        echo "Found app: $app_path"
        
        mkdir -p build/export/Payload
        cp -r "$app_path" build/export/Payload/
        
        cd build/export
        zip -r CodenameEngine-unsigned.ipa Payload/
        cd ../..
        
        echo "IPA created successfully"
        ls -la build/export/
        
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-unsigned-ipa
        path: build/export/*.ipa
        if-no-files-found: error